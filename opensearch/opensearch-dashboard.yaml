apiVersion: apps/v1
kind: Deployment
metadata:
  name: opensearch-dashboards
  labels:
    app: opensearch-dashboards
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opensearch-dashboards
  template:
    metadata:
      labels:
        app: opensearch-dashboards
    spec:
      containers:
      - name: opensearch-dashboards
        image: opensearchproject/opensearch-dashboards:2.19.3 # Use a specific version if needed
        ports:
        - containerPort: 5601
          name: http
        env:
        # Point Dashboards to the OpenSearch service
        - name: "OPENSEARCH_HOSTS"
          value: '["http://opensearch:9200"]' # Uses the service name
        # Disable security to match OpenSearch setting
        - name: "plugins.security.disabled"
          value: "true"
        - name: "DISABLE_SECURITY_DASHBOARDS_PLUGIN"
          value: "true"
#        resources:
#          limits:
#            memory: "512Mi"
#            cpu: "500m"
#          requests:
#            memory: "256Mi"
#            cpu: "100m"
        readinessProbe:
          httpGet:
            path: /
            port: 5601
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: opensearch-dashboards
  labels:
    app: opensearch-dashboards
spec:
  selector:
    app: opensearch-dashboards
  ports:
  - name: http
    port: 5601
    targetPort: 5601
  # Optional: Change to LoadBalancer or NodePort if you need external access
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: opensearch-dashboards-ingress
  namespace: logging
spec:
  ingressClassName: contour
  tls:
  - hosts:
    - opensearch.vcf.vstackops.com
    secretName: opensearch-tls-secret
  rules:
  - host: opensearch.vcf.vstackops.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: opensearch-dashboards
            port:
              number: 5601